group GROUP
version VERSION

apply plugin: 'maven'
apply plugin: 'java'

// JVM 版本号要求
sourceCompatibility = 1.8
targetCompatibility = 1.8

// java编译的时候缺省状态下会因为中文字符而失败
[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

repositories {
    mavenLocal()

    maven { url 'http://rddgit.changhong.com/nexus/repository/SEI_Group/' }
    maven {
        url 'https://repo.maven.apache.org/maven2'
        name 'Maven Central'
    }
}

//自定义属性
ext {

}

dependencies {
    compile(
            "commons-io:commons-io:$commons_io_version",
            "commons-beanutils:commons-beanutils:$commons_beanutils_version",
            "org.apache.commons:commons-lang3:$commons_lang3_version",
            "commons-codec:commons-codec:$commons_codec_version",
//            "com.squareup.okhttp3:okhttp:$ok_http_version",

            "com.fasterxml.uuid:java-uuid-generator:$fasterxml_uuid_version"
    )

    // 反射工具类
    compile('org.reflections:reflections:0.10.2')

    // 国密算法工具包
//    compile('org.bouncycastle:bcprov-jdk15on:1.54')
    compile('org.bouncycastle:bcprov-jdk16:1.46')

    // 在使用线程池等会池化复用线程的执行组件情况下，提供ThreadLocal值的传递功能，解决异步执行时上下文传递的问题
    compile('com.alibaba:transmittable-thread-local:2.12.4')

    implementation('org.slf4j:slf4j-api:1.7.35')

    // 测试依赖
    testCompile(
            "junit:junit:$junit_version"
    )
}

jar {
    manifest {
//        attributes("Created-By": "sei")
        attributes("Implementation-Title": "sei-core")
//        attributes("Implementation-Version": "1.0-SNAPSHOT")
        attributes("Build-Time": new Date().format("yyyy-MM-dd HH:mm:ss"))
    }
}

/////////////////////////////////////Maven////////////////////////////////////////
// http://www.cnblogs.com/yjmyzz/p/auto-upload-artifact-to-nexus.html

//打包源代码
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task myJavadocs(type: Javadoc) {
    options.encoding = "UTF-8"

    source = sourceSets.main.allJava
}

artifacts {
    archives sourcesJar
}

//如果希望gradle install，安装到.m2本地仓库，参考下面的内容
install {
    repositories.mavenInstaller {
        pom.version = "$project.version"
        pom.artifactId = "$project.name"
        pom.groupId = "$project.group"
    }
}

//上传到nexus
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: MAVEN_REPO_URL) {
                authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
            }
            pom.version = "$project.version"
            pom.artifactId = "$project.name"
            pom.groupId = "$project.group"
        }
    }
    return 'Success'
}